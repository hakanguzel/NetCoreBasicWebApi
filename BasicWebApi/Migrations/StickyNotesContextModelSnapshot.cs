// <auto-generated />
using System;
using BasicWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicWebApi.Migrations
{
    [DbContext(typeof(StickyNotesContext))]
    partial class StickyNotesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BasicWebApi.Models.Entites.StickyNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("StickyNotes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4469ec5f-b8ba-45e7-b144-a36fbcc48827"),
                            Note = "Test Note1",
                            Title = "Test Title1",
                            UserId = new Guid("26f4e1ac-e426-421e-b2ea-e759500430f3")
                        },
                        new
                        {
                            Id = new Guid("1657de06-3e16-4ac7-8b9d-fc1359d1ddc6"),
                            Note = "Test Note2",
                            Title = "Test Title2",
                            UserId = new Guid("26f4e1ac-e426-421e-b2ea-e759500430f3")
                        },
                        new
                        {
                            Id = new Guid("1fd849e2-f3b0-4a80-a7dd-32f47de67fcf"),
                            Note = "Test Note3",
                            Title = "Test Title3",
                            UserId = new Guid("6f793c05-8555-4090-a411-b16fdff9e5f1")
                        },
                        new
                        {
                            Id = new Guid("48b06430-5ae0-4420-bb3a-0bbf5a528c7f"),
                            Note = "Test Note4",
                            Title = "Test Title4",
                            UserId = new Guid("6f793c05-8555-4090-a411-b16fdff9e5f1")
                        });
                });

            modelBuilder.Entity("BasicWebApi.Models.Entites.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("26f4e1ac-e426-421e-b2ea-e759500430f3"),
                            FirstName = "FirstName1",
                            LastName = "LastName1"
                        },
                        new
                        {
                            Id = new Guid("6f793c05-8555-4090-a411-b16fdff9e5f1"),
                            FirstName = "FirstName2",
                            LastName = "LastName2"
                        });
                });

            modelBuilder.Entity("BasicWebApi.Models.Entites.StickyNote", b =>
                {
                    b.HasOne("BasicWebApi.Models.Entites.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
